{"version":3,"sources":["context.js","ToDo/TodoItem.js","ToDo/TodoList.js","ToDo/AddTodo.js","Loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","maginBottom","background","marginTop","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","complited","push","style","className","type","checked","id","join","title","onClick","ul","listStyle","margin","ToDoList","props","todos","map","onToggle","form","width","AddTodo","onCreate","defaultValue","useState","value","setValue","bind","event","target","clear","useInputValue","onSubmit","preventDefault","trim","Loader","Modal","state","isOpen","Fragment","setState","this","Component","App","setTodos","loading","setLoading","useEffect","fetch","then","response","json","setTimeout","Provider","filter","concat","Date","now","length","el","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfc2acce.chunk.js","sourcesContent":["import React from \"react\"\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import PropTypes from \"prop-types\";\r\nimport { useContext } from \"react\";\r\nimport Context from \"../context\";\r\n\r\nconst styles = {\r\n  li: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: \".5rem 1rem\",\r\n    border: \"1px solid gray\",\r\n    borderRadius: \"5px\",\r\n    maginBottom: \".5rem\",\r\n    background: \"white\",\r\n    marginTop: \"10px\",\r\n  },\r\n  input: {\r\n    marginRight: \"1rem\",\r\n  },\r\n};\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n  const { removeTodo } = useContext(Context);\r\n  const classes = [];\r\n\r\n  if (todo.complited) {\r\n    classes.push(\"done\");\r\n  }\r\n  return (\r\n    <li style={styles.li}>\r\n      <div className=\"task\">\r\n        <div>\r\n          <input\r\n            style={styles.input}\r\n            type=\"checkbox\"\r\n            checked={todo.complited}\r\n            onChange={() => {\r\n              onChange(todo.id);\r\n            }}\r\n          />\r\n        </div>\r\n          <strong>{index + 1}.</strong>\r\n\r\n        <div className={classes.join(\" \")}>&nbsp;{todo.title}</div>\r\n      </div>\r\n\r\n      <button className=\"deleteBtn\" onClick={() => removeTodo(todo.id)}>\r\n        &times;\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import PropTypes from \"prop-types\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst styles = {\r\n  ul: {\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n};\r\n\r\nfunction ToDoList(props) {\r\n  return (\r\n    <ul style={styles.ul}>\r\n      {props.todos.map((todo, index) => {\r\n        return (\r\n          <TodoItem\r\n            todo={todo}\r\n            key={todo.id}\r\n            index={index}\r\n            onChange={props.onToggle}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nToDoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onToggle: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ToDoList;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\"; \r\nconst styles = {\r\n  form: {\r\n    margin: \"1rem 0\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  input: {\r\n    width: \"80%\",\r\n  },\r\n};\r\n\r\nfunction useInputValue(defaultValue = \"\") {\r\n  const [value, setValue] = useState(defaultValue);\r\n\r\n  return {\r\n    bind: {\r\n      value,\r\n      onChange: (event) => setValue(event.target.value),\r\n    },\r\n    clear: () => setValue(\"\"),\r\n    value: () => value,\r\n  };\r\n}\r\n\r\nfunction AddTodo({ onCreate }) {\r\n  const input = useInputValue();\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    if (input.value().trim()) {\r\n      onCreate(input.value());\r\n      input.clear();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form style={styles.form} onSubmit={submitHandler}>\r\n      <input style={styles.input} {...input.bind} />\r\n      <button className=\"addBtn\" type=\"submit\">\r\n        Add todo\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nAddTodo.propTypes = {\r\n  onCreate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddTodo;\r\n","function Loader() {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", margin: \"5rem\" }}>\r\n      <div className=\"lds-roller\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nexport default class Modal extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={()=>this.setState({isOpen:true})}>Open modal</button>\r\n        {this.state.isOpen && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal__body\">\r\n              <h1>Modal title</h1>\r\n              <p>i am awesome text</p>\r\n              <button onClick={()=>this.setState({isOpen:false})}>Close modal</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\nimport ToDoList from \"./ToDo/TodoList\";\nimport Context from \"./context\";\nimport AddTodo from \"./ToDo/AddTodo\";\nimport Loader from \"./Loader\";\nimport Modal from \"./Modal/Modal\";\n\nfunction App() {\n\n  const [todos,setTodos] = React.useState([]);\n  const [loading,setLoading] = React.useState(true);\n\nuseEffect(()=>{\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=3')\n    .then(response => response.json())\n    .then(todos => {\n      setTimeout(() => {\n        setTodos(todos) \n        setLoading(false) \n      }, 1000);\n    })\n},[])\n\n  function toggleTodo(id) { \n    setTodos(todos.map(el => {\n      if(el.id === id){ \n        el.complited = !el.complited;  \n      }\n      return el;\n    }))\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo=>todo.id!==id))\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          complited:false,\n        }\n      ])\n    )\n  }\n\n  return (\n  <Context.Provider value={{removeTodo}}>  \n    <div className=\"wrapper\"> \n      <h1 className='title'>ToDo List</h1>\n      <Modal/>\n      <AddTodo onCreate={addTodo} />\n\n      {loading && <Loader/>}\n      {todos.length?<ToDoList todos={todos} onToggle={toggleTodo}/>:!loading?<p style={{color:'white',background:'black',padding:'10px'}}>No todos!</p>:null}\n      \n    </div>\n  </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}